# .github/workflows/benchmark.yml
name: Benchmark

on:
  workflow_dispatch:  # Manual triggering with options
    inputs:
      force-run:
        description: 'Force benchmarks to run'
        required: true
        type: boolean
        default: false
  push:
    branches: [ "master" ]
    paths:
      - 'src/**/*.rs'
      # Only run on changes that could affect performance
      - '!src/tests/**'
      - 'benches/**/*.rs'
      # Only consider direct dependency changes
      - 'Cargo.toml'
      - '.github/workflows/benchmark.yml'
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ "master" ]
    paths:
      - 'src/**/*.rs'
      - '!src/tests/**'
      - 'benches/**/*.rs'
      - 'Cargo.toml'
      - '.github/workflows/benchmark.yml'

# Add concurrency to cancel outdated runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  # Add required permissions for commenting on PRs if we want to post results
  pull-requests: write

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.check.outputs.should-run }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for git diff

      - name: Fetch main branch
        run: git fetch origin main

      - id: check
        name: Check if benchmarks are needed
        run: |
          # Always echo the initial condition for debugging
          echo "Event name: ${{ github.event_name }}"
          echo "Force run: ${{ inputs.force-run }}"
          echo "Current ref: ${{ github.ref }}"

          # Check for manual trigger with force-run
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ inputs.force-run }}" == "true" ]]; then
            echo "Manual run requested with force-run=true"
            echo "should-run=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Initialize changes.txt
          touch changes.txt

          # Determine which files have changed
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Checking changes on main branch..."
            # For main branch, compare with the previous commit
            if git rev-parse HEAD^ >/dev/null 2>&1; then
              git diff --name-only HEAD^ HEAD > changes.txt
            else
              # First commit on main
              git ls-files > changes.txt
            fi
          elif [[ -n "${{ github.event.pull_request }}" ]]; then
            echo "Checking changes on PR..."
            # For PR, compare with main branch
            git diff --name-only origin/main...HEAD > changes.txt
          else
            echo "Checking changes on feature branch..."
            # For other branches, compare with main
            git diff --name-only origin/main...HEAD > changes.txt
          fi

          # Debug: show detected changes
          echo "Detected changes:"
          cat changes.txt

          # Check if any performance-critical files changed
          if grep -q "src/lib.rs\|src/parser.rs\|src/packet.rs" changes.txt; then
            echo "Core functionality changed"
            echo "should-run=true" >> $GITHUB_OUTPUT
          elif grep -q "^benches/" changes.txt; then
            echo "Benchmark code changed"
            echo "should-run=true" >> $GITHUB_OUTPUT
          elif grep -q "Cargo.toml" changes.txt && grep -q "^\[dependencies\]" Cargo.toml; then
            echo "Dependencies changed"
            echo "should-run=true" >> $GITHUB_OUTPUT
          else
            echo "No performance-critical changes"
            echo "should-run=false" >> $GITHUB_OUTPUT
          fi


  benchmark:
    needs: check-changes
    if: needs.check-changes.outputs.should-run == 'true'
    name: Run benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      # Only run full benchmarks on master or if explicitly requested
      - name: Run quick benchmarks
        if: github.ref != 'refs/heads/master' && github.event_name != 'workflow_dispatch'
        run: |
          # Run with fewer samples for PR checks
          cargo bench --workspace -- --warm-up-time 1 --measurement-time 2 --sample-size 10
          cargo bench --workspace --features="async" -- --warm-up-time 1 --measurement-time 2 --sample-size 10

      - name: Run full benchmarks
        if: github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch'
        run: |
          cargo bench --workspace
          cargo bench --workspace --features="async"

      - name: Store benchmark result
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: target/criterion/**/*.json
          retention-days: 30

      # Optional: Add a step to comment benchmark results on PR
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            // Read and parse benchmark results
            // Add logic to format and post results as comment
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Benchmark results: ...' // Format your results here
            });